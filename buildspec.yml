##################################################################
## Licensed to the Apache Software Foundation (ASF) under one   ##
## or more contributor license agreements.  See the NOTICE file ##
## distributed with this work for additional information        ##
## regarding copyright ownership.  The ASF licenses this file   ##
## to you under the Apache License, Version 2.0 (the            ##
## "License"); you may not use this file except in compliance   ##
## with the License.  You may obtain a copy of the License at   ##
##                                                              ##
##   http://www.apache.org/licenses/LICENSE-2.0                 ##
##                                                              ##
## Unless required by applicable law or agreed to in writing,   ##
## software distributed under the License is distributed on an  ##
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       ##
## KIND, either express or implied.  See the License for the    ##
## specific language governing permissions and limitations      ##
## under the License.                                           ##
##################################################################

version: 0.2

env:
  variables:
    ECR_BASE: "dkr.ecr.us-east-2.amazonaws.com"
    CONTAINER_NAME: "containerized-status-node"
    AWS_DEFAULT_REGION: "us-east-2"
  parameter-store:
    AWS_ACCOUNT_ID: "/cb/aws/acct/id"
    AWS_ACCESS_KEY_ID: "/cb/aws/key/id"
    AWS_SECRET_ACCESS_KEY: "/cb/aws/key/secret"

phases:
  install:
    commands:
      - echo Setting up Docker as part of the install phase
      - echo Logging into AWS ECR
      # This is for CLI v2 -> looks like AWS is still using CLI v1 for CB
      # - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.$ECR_BASE
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    finally:
      - echo Install finshed on `date`
  pre_build:
    commands:
      - echo Entering the pre-build phase
      - export APP_BUILD_VERSION=$(date +"%Y%m%d%H%M%S.%s")
  build:
    commands:
      - echo Entering the build phase - creating the Docker image
      - docker build --build-arg SVC_PORT=$PORT --build-arg APP_VERSION=$APP_BUILD_VERSION -t $CONTAINER_NAME .
      - docker tag $CONTAINER_NAME $AWS_ACCOUNT_ID.$ECR_BASE/$CONTAINER_NAME:$APP_BUILD_VERSION
      - docker tag $CONTAINER_NAME $AWS_ACCOUNT_ID.$ECR_BASE/$CONTAINER_NAME:latest
    finally:
      - echo Build $APP_BUILD_VERSION finshed on `date`
  post_build:
    commands:
      - echo Entering post build phase - pushing the image to ECR
      - docker push $AWS_ACCOUNT_ID.$ECR_BASE/$CONTAINER_NAME:latest
      - docker push $AWS_ACCOUNT_ID.$ECR_BASE/$CONTAINER_NAME:$APP_BUILD_VERSION
      - aws ecs update-service --service ${CONTAINER_NAME}-svc --force-new-deployment
    finally:
      - echo Post-build finshed on `date`
